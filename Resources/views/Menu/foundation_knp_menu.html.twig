{% extends 'KnpMenuBundle::menu.html.twig' %}

{% block root %}
    {% set isTopBar = 'topbar' == item.extra('menu_type') %}
    {% if isTopBar %}
        <nav class="top-bar" data-topbar>
            <ul class="title-area">
                <li class="name"></li>
                <li class="toggle-topbar menu-icon"><a href="#"><span>Menu</span></a></li>
            </ul>
            <section class="top-bar-section">
    {% endif %}
    {{ parent() }}
    {% if isTopBar %}
            </section>
        </nav>
    {% endif %}
{% endblock %}

{% block list %}
    {% if item.hasChildren and options.depth is not same as(0) and item.displayChildren %}
        {% if item.level > 0 %}
            {% set listAttributes = listAttributes|merge({'class': (listAttributes.class|default('') ~ ' dropdown')|trim}) %}
        {% endif %}
        {% if item.extra('menu_type') == 'sidebar' %}
            {% set listAttributes = listAttributes|merge({'class': (listAttributes.class|default('') ~ ' side-nav')|trim}) %}
        {% endif %}
    {% endif %}
    {{ parent() }}
{% endblock %}

{% block item %}
    {% if item.displayed %}
        {# Building the class of the item #}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
        {%- if matcher.isCurrent(item) %}
            {%- set classes = classes|merge([options.currentClass]) %}
        {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}

        {# Mark item as "leaf" (no children) or as "branch" (has children that are displayed) #}
        {% if item.hasChildren and options.depth is not same as(0) %}
            {%- set classes = classes|merge(['has-dropdown']) %}
            {% if options.branch_class is not empty and item.displayChildren %}
                {%- set classes = classes|merge([options.branch_class]) %}
            {% endif %}
        {% elseif options.leaf_class is not empty %}
            {%- set classes = classes|merge([options.leaf_class]) %}
        {%- endif %}

        {%- set attributes = item.attributes %}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}
        {# Displaying the item #}
        {% import 'knp_menu.html.twig' as knp_menu %}
        {%- if item.extra('divider_prepend') -%}
            {{ block('divider') }}
        {%- endif -%}
        <li{{ knp_menu.attributes(attributes) }}>
            {% if item.uri is empty and not item.hasChildren %}
                {{ block('labelElement') }}
            {%- else %}
                {{ block('linkElement') }}
            {%- endif %}
            {# render the list of children #}
            {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
            {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
            {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
            {{ block('list') }}
        </li>
        {%- if item.extra('divider_append') -%}
            {{ block('divider') }}
        {%- endif -%}
    {% endif %}
{% endblock %}

{% block label %}
    {% if item.extra('icon') is not empty and item.extra('icon_position', 'before') != 'after' -%}
        <i class="fa {{ item.extra('icon') }}"></i>{%- if item.extra('icon_position', 'before') != 'no-label' -%}&nbsp;{%- endif -%}
    {%- endif -%}
    {%- if item.extra('icon_position', 'before') != 'no-label' -%}
    {{ parent() }}
    {%- endif -%}
    {%- if item.extra('icon') is not empty and item.extra('icon_position', 'before') == 'after' -%}
        <i class="fa {{ item.extra('icon') }}"></i>
    {%- endif %}
{% endblock %}

{% block labelElement %}{% import 'knp_menu.html.twig' as knp_menu %}<label{{ knp_menu.attributes(item.labelAttributes) }}>{{ block('label') }}</label>{% endblock %}

{% block divider %}<li class="divider"></li>{% endblock %}
